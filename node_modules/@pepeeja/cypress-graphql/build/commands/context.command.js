"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLContextCommand = void 0;
var utils_1 = require("../utils");
var abstract_command_1 = require("./abstract.command");
var GraphQLContextCommand = /** @class */ (function (_super) {
    __extends(GraphQLContextCommand, _super);
    function GraphQLContextCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GraphQLContextCommand.prototype.command = function (gql) {
        gql(new GraphQLMockContext());
        return;
    };
    return GraphQLContextCommand;
}(abstract_command_1.AbstractCommand));
exports.GraphQLContextCommand = GraphQLContextCommand;
var GraphQLMockContext = /** @class */ (function () {
    function GraphQLMockContext() {
        this._schema = null;
        this._options = { delay: 0, method: 'POST' };
    }
    GraphQLMockContext.prototype.mock = function (operation, response) {
        utils_1.GraphQLMockUtil.mock(operation, response, this._options, this._schema);
        return this;
    };
    GraphQLMockContext.prototype.schemaFromString = function (schemaString) {
        return this.schema(utils_1.GraphQLMockUtil.schemaFromString(schemaString));
    };
    GraphQLMockContext.prototype.schema = function (schema) {
        this._schema = schema;
        return this;
    };
    GraphQLMockContext.prototype.options = function (options) {
        this._options = options;
        return this;
    };
    return GraphQLMockContext;
}());
