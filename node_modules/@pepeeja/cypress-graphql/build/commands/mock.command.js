"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLMockCommand = void 0;
var utils_1 = require("../utils");
var abstract_command_1 = require("./abstract.command");
var GraphQLMockCommand = /** @class */ (function (_super) {
    __extends(GraphQLMockCommand, _super);
    function GraphQLMockCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GraphQLMockCommand.prototype.command = function (operation, response, mockOptions) {
        var config = utils_1.StoreUtil.get();
        var options = Object.assign(config.options, mockOptions);
        if (config.schemaString) {
            utils_1.GraphQLMockUtil.mock(operation, response, options, utils_1.GraphQLMockUtil.schemaFromString(config.schemaString));
        }
        if (config.clientSchema) {
            utils_1.GraphQLMockUtil.mock(operation, response, options, utils_1.GraphQLMockUtil.clientSchemaFromString(config.clientSchema));
        }
        return;
    };
    return GraphQLMockCommand;
}(abstract_command_1.AbstractCommand));
exports.GraphQLMockCommand = GraphQLMockCommand;
