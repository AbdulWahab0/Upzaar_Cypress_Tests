import { GraphQLContextCommand, GraphQLConfigCommand, GraphQLMockCommand } from '../commands';
declare type ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;
declare global {
    namespace Cypress {
        interface Chainable {
            graphqlContext: (...args: ArgumentTypes<GraphQLContextCommand['command']>) => Cypress.Chainable;
            graphqlConfig: (...args: ArgumentTypes<GraphQLConfigCommand['command']>) => Cypress.Chainable;
            graphqlMock: (...args: ArgumentTypes<GraphQLMockCommand['command']>) => Cypress.Chainable;
        }
    }
}
export {};
